W8xfgsr0b9XRI9V1VPLxeITOmJgmDs8xpVaHMOXGZeU=
alsanea_project/
│
├── alsanea/                      # مشروع Django الرئيسي
│   ├── __init__.py
│   ├── settings.py               # إعدادات المشروع
│   ├── urls.py                   # عناوين URL الرئيسية
│   ├── asgi.py
│   └── wsgi.py
│
├── core/                         # تطبيق جوهر الموقع
│   ├── __init__.py
│   ├── admin.py                  # إعدادات لوحة الإدارة
│   ├── apps.py
│   ├── models.py                 # نماذج البيانات الأساسية
│   ├── views.py                  # طرق العرض الأساسية
│   ├── urls.py                   # عناوين URL
│   ├── forms.py                  # نماذج الإدخال
│   ├── utils.py                  # أدوات مساعدة
│   ├── middleware.py             # وسيط للغة وغيرها
│   ├── migrations/               # ترحيلات قاعدة البيانات
│   └── templates/
│       └── core/
│           ├── base.html         # قالب HTML الأساسي
│           ├── index.html        # الصفحة الرئيسية
│           ├── about.html        # صفحة عن الشركة
│           ├── contact.html      # صفحة اتصل بنا
│           └── components/       # مكونات قابلة لإعادة الاستخدام
│               ├── header.html
│               ├── footer.html
│               ├── sidebar.html
│               └── social_links.html
│
├── services/                     # تطبيق الخدمات
│   ├── __init__.py
│   ├── admin.py
│   ├── apps.py
│   ├── models.py                 # نماذج الخدمات والمشاريع
│   ├── views.py
│   ├── urls.py
│   ├── forms.py
│   ├── migrations/
│   └── templates/
│       └── services/
│           ├── services_list.html
│           ├── service_detail.html
│           ├── projects_list.html
│           └── project_detail.html
│
├── dashboard/                    # تطبيق لوحة التحكم للإدارة
│   ├── __init__.py
│   ├── admin.py
│   ├── apps.py
│   ├── models.py
│   ├── views.py                  # طرق عرض لوحة التحكم
│   ├── urls.py
│   ├── forms.py                  # نماذج إدارة المحتوى
│   ├── migrations/
│   └── templates/
│       └── dashboard/
│           ├── dashboard.html
│           ├── content_manager.html
│           ├── media_manager.html
│           ├── users_manager.html
│           └── settings.html
│
├── locale/                       # ملفات الترجمة
│   ├── ar/                      # اللغة العربية
│   └── en/                      # اللغة الإنجليزية
│
├── static/                       # الملفات الثابتة
│   ├── css/
│   │   ├── main.css
│   │   ├── bootstrap.min.css
│   │   └── responsive.css       # تصميم متجاوب
│   ├── js/
│   │   ├── main.js
│   │   ├── bootstrap.min.js
│   │   └── jquery.min.js
│   ├── images/
│   │   ├── logo.png
│   │   ├── favicon.ico
│   │   ├── backgrounds/
│   │   ├── services/
│   │   ├── projects/
│   │   └── team/
│   └── fonts/
│
├── media/                        # ملفات الوسائط المتعددة
│   ├── uploads/
│   ├── projects/
│   ├── services/
│   ├── gallery/
│   └── documents/
│
├── templates/                    # قوالب عامة
│   ├── admin/                   # تخصيص قوالب الإدارة
│   ├── registration/            # قوالب تسجيل الدخول والحسابات
│   └── errors/                  # صفحات الخطأ
│       ├── 404.html
│       ├── 500.html
│       └── 403.html
│
├── requirements.txt              # متطلبات المشروع
├── manage.py                     # سكريبت إدارة جانقو
├── .env                          # متغيرات البيئة
├── .gitignore                    # ملفات مستثناة من Git
└── README.md                     # توثيق المشروع




نماذج البيانات الرئيسية (models.py)
core/models.py

from django.db import models
from django.utils.translation import gettext_lazy as _
from django.utils.text import slugify

class SiteSettings(models.Model):
    """إعدادات الموقع العامة"""
    site_name = models.CharField(_("اسم الموقع"), max_length=100)
    site_title = models.CharField(_("عنوان الموقع"), max_length=200)
    site_description = models.TextField(_("وصف الموقع"))
    contact_email = models.EmailField(_("البريد الإلكتروني للتواصل"))
    contact_phone = models.CharField(_("رقم الهاتف"), max_length=20)
    address = models.TextField(_("العنوان"))
    facebook_url = models.URLField(_("رابط فيسبوك"), blank=True)
    twitter_url = models.URLField(_("رابط تويتر"), blank=True)
    linkedin_url = models.URLField(_("رابط لينكد إن"), blank=True)
    instagram_url = models.URLField(_("رابط إنستجرام"), blank=True)
    youtube_url = models.URLField(_("رابط يوتيوب"), blank=True)
    footer_text = models.TextField(_("نص التذييل"))
    google_analytics = models.TextField(_("كود جوجل أناليتكس"), blank=True)
    
    class Meta:
        verbose_name = _("إعدادات الموقع")
        verbose_name_plural = _("إعدادات الموقع")

class CompanyInfo(models.Model):
    """معلومات الشركة"""
    vision = models.TextField(_("الرؤية"))
    mission = models.TextField(_("الرسالة"))
    history = models.TextField(_("تاريخ الشركة"))
    about_image = models.ImageField(_("صورة تعريفية"), upload_to='company/')
    
    class Meta:
        verbose_name = _("معلومات الشركة")
        verbose_name_plural = _("معلومات الشركة")

class TeamMember(models.Model):
    """أعضاء مجلس الإدارة والفريق"""
    name = models.CharField(_("الاسم"), max_length=100)
    position = models.CharField(_("المنصب"), max_length=100)
    bio = models.TextField(_("نبذة مختصرة"))
    image = models.ImageField(_("الصورة"), upload_to='team/')
    is_board_member = models.BooleanField(_("عضو مجلس إدارة"), default=False)
    order = models.IntegerField(_("الترتيب"), default=0)
    
    class Meta:
        verbose_name = _("عضو الفريق")
        verbose_name_plural = _("أعضاء الفريق")
        ordering = ['order', 'name']

class Testimonial(models.Model):
    """آراء العملاء"""
    name = models.CharField(_("الاسم"), max_length=100)
    position = models.CharField(_("المنصب"), max_length=100)
    company = models.CharField(_("الشركة"), max_length=100)
    testimonial = models.TextField(_("الشهادة"))
    image = models.ImageField(_("الصورة"), upload_to='testimonials/', blank=True)
    is_active = models.BooleanField(_("نشط"), default=True)
    
    class Meta:
        verbose_name = _("رأي عميل")
        verbose_name_plural = _("آراء العملاء")

class ContactMessage(models.Model):
    """رسائل التواصل"""
    name = models.CharField(_("الاسم"), max_length=100)
    email = models.EmailField(_("البريد الإلكتروني"))
    phone = models.CharField(_("رقم الهاتف"), max_length=20)
    subject = models.CharField(_("الموضوع"), max_length=200)
    message = models.TextField(_("الرسالة"))
    created_at = models.DateTimeField(_("تاريخ الإرسال"), auto_now_add=True)
    is_read = models.BooleanField(_("تمت القراءة"), default=False)
    
    class Meta:
        verbose_name = _("رسالة تواصل")
        verbose_name_plural = _("رسائل التواصل")
        ordering = ['-created_at']

class Partner(models.Model):
    """الشركاء والعملاء"""
    name = models.CharField(_("الاسم"), max_length=100)
    logo = models.ImageField(_("الشعار"), upload_to='partners/')
    website = models.URLField(_("الموقع الإلكتروني"), blank=True)
    is_partner = models.BooleanField(_("شريك"), default=True)
    
    class Meta:
        verbose_name = _("شريك/عميل")
        verbose_name_plural = _("الشركاء والعملاء")

class Slider(models.Model):
    """شرائح العرض الرئيسية"""
    title = models.CharField(_("العنوان"), max_length=200)
    subtitle = models.CharField(_("العنوان الفرعي"), max_length=300, blank=True)
    description = models.TextField(_("الوصف"), blank=True)
    image = models.ImageField(_("الصورة"), upload_to='sliders/')
    button_text = models.CharField(_("نص الزر"), max_length=50, blank=True)
    button_url = models.CharField(_("رابط الزر"), max_length=200, blank=True)
    order = models.IntegerField(_("الترتيب"), default=0)
    is_active = models.BooleanField(_("نشط"), default=True)
    
    class Meta:
        verbose_name = _("شريحة عرض")
        verbose_name_plural = _("شرائح العرض")
        ordering = ['order']



services/models.py

from django.db import models
from django.utils.translation import gettext_lazy as _
from django.utils.text import slugify

class ServiceCategory(models.Model):
    """فئات الخدمات"""
    name = models.CharField(_("الاسم"), max_length=100)
    slug = models.SlugField(_("الرابط المختصر"), unique=True)
    description = models.TextField(_("الوصف"))
    icon = models.CharField(_("أيقونة"), max_length=50, help_text=_("اسم أيقونة من Font Awesome"))
    
    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)
    
    class Meta:
        verbose_name = _("فئة خدمات")
        verbose_name_plural = _("فئات الخدمات")

class Service(models.Model):
    """الخدمات المقدمة"""
    category = models.ForeignKey(ServiceCategory, on_delete=models.CASCADE, related_name='services')
    title = models.CharField(_("العنوان"), max_length=200)
    slug = models.SlugField(_("الرابط المختصر"), unique=True)
    short_description = models.TextField(_("وصف مختصر"))
    description = models.TextField(_("الوصف التفصيلي"))
    main_image = models.ImageField(_("الصورة الرئيسية"), upload_to='services/')
    icon = models.CharField(_("أيقونة"), max_length=50, help_text=_("اسم أيقونة من Font Awesome"))
    featured = models.BooleanField(_("مميزة"), default=False)
    created_at = models.DateTimeField(_("تاريخ الإنشاء"), auto_now_add=True)
    updated_at = models.DateTimeField(_("تاريخ التحديث"), auto_now=True)
    order = models.IntegerField(_("الترتيب"), default=0)
    
    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.title)
        super().save(*args, **kwargs)
    
    class Meta:
        verbose_name = _("خدمة")
        verbose_name_plural = _("الخدمات")
        ordering = ['order', '-updated_at']

class ServiceImage(models.Model):
    """صور إضافية للخدمات"""
    service = models.ForeignKey(Service, on_delete=models.CASCADE, related_name='images')
    image = models.ImageField(_("الصورة"), upload_to='services/gallery/')
    title = models.CharField(_("العنوان"), max_length=100, blank=True)
    order = models.IntegerField(_("الترتيب"), default=0)
    
    class Meta:
        verbose_name = _("صورة الخدمة")
        verbose_name_plural = _("صور الخدمات")
        ordering = ['order']

class Project(models.Model):
    """المشاريع المنفذة"""
    STATUSES = (
        ('completed', _('مكتمل')),
        ('in_progress', _('قيد التنفيذ')),
        ('planned', _('مخطط له')),
    )
    
    title = models.CharField(_("العنوان"), max_length=200)
    slug = models.SlugField(_("الرابط المختصر"), unique=True)
    client = models.CharField(_("العميل"), max_length=100)
    location = models.CharField(_("الموقع"), max_length=100)
    start_date = models.DateField(_("تاريخ البدء"))
    end_date = models.DateField(_("تاريخ الانتهاء"), null=True, blank=True)
    status = models.CharField(_("الحالة"), max_length=20, choices=STATUSES)
    short_description = models.TextField(_("وصف مختصر"))
    description = models.TextField(_("الوصف التفصيلي"))
    main_image = models.ImageField(_("الصورة الرئيسية"), upload_to='projects/')
    services = models.ManyToManyField(Service, related_name='projects', verbose_name=_("الخدمات المرتبطة"))
    featured = models.BooleanField(_("مميز"), default=False)
    
    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.title)
        super().save(*args, **kwargs)
    
    class Meta:
        verbose_name = _("مشروع")
        verbose_name_plural = _("المشاريع")
        ordering = ['-start_date']

class ProjectImage(models.Model):
    """صور إضافية للمشاريع"""
    project = models.ForeignKey(Project, on_delete=models.CASCADE, related_name='images')
    image = models.ImageField(_("الصورة"), upload_to='projects/gallery/')
    title = models.CharField(_("العنوان"), max_length=100, blank=True)
    order = models.IntegerField(_("الترتيب"), default=0)
    
    class Meta:
        verbose_name = _("صورة المشروع")
        verbose_name_plural = _("صور المشاريع")
        ordering = ['order']


dashboard/models.py

from django.db import models
from django.utils.translation import gettext_lazy as _

class UserActionLog(models.Model):
    """سجل نشاطات المستخدمين في لوحة التحكم"""
    ACTION_TYPES = (
        ('create', _('إنشاء')),
        ('update', _('تعديل')),
        ('delete', _('حذف')),
        ('login', _('تسجيل دخول')),
        ('logout', _('تسجيل خروج')),
    )
    
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='actions')
    action_type = models.CharField(_("نوع النشاط"), max_length=20, choices=ACTION_TYPES)
    model_name = models.CharField(_("اسم النموذج"), max_length=100, blank=True)
    object_id = models.PositiveIntegerField(_("معرف الكائن"), null=True, blank=True)
    description = models.TextField(_("الوصف"))
    timestamp = models.DateTimeField(_("التوقيت"), auto_now_add=True)
    ip_address = models.GenericIPAddressField(_("عنوان IP"), null=True, blank=True)
    
    class Meta:
        verbose_name = _("سجل نشاط")
        verbose_name_plural = _("سجلات النشاطات")
        ordering = ['-timestamp']





       ملف متطلبات المشروع (requirements.txt) 
Django==4.2.7
Pillow==10.1.0
django-ckeditor==6.7.0
django-crispy-forms==2.0
django-cleanup==8.0.0
django-modeltranslation==0.18.11
django-filter==23.3
django-compressor==4.4
django-allauth==0.58.2
django-storages==1.14.2
django-taggit==4.0.0
python-decouple==3.8
whitenoise==6.6.0
gunicorn==21.2.0
psycopg2-binary==2.9.9
dj-database-url==2.1.0